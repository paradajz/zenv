diff --git a/cmake/sca/codechecker/sca.cmake b/cmake/sca/codechecker/sca.cmake
index 7c69c836d6d..a5391d46586 100644
--- a/cmake/sca/codechecker/sca.cmake
+++ b/cmake/sca/codechecker/sca.cmake
@@ -57,7 +57,7 @@ else()
 endif()
 
 if(CODECHECKER_TRIM_PATH_PREFIX)
-  set(CODECHECKER_TRIM_PATH_PREFIX "--trim-path-prefix;${CODECHECKER_TRIM_PATH_PREFIX}")
+  set(CODECHECKER_TRIM_PATH_PREFIX "--trim-path-prefix=${CODECHECKER_TRIM_PATH_PREFIX}")
 endif()
 
 # CodeChecker uses the compile_commands.json as input
@@ -106,13 +106,6 @@ endif()
 
 add_dependencies(codechecker-cleanup codechecker)
 
-# If 'codechecker parse' returns an exit status of '2', it means more than 0
-# issues were detected. Suppress the exit status by default, but permit opting
-# in to the failure.
-if(NOT CODECHECKER_PARSE_EXIT_STATUS)
-  set(CODECHECKER_PARSE_OPTS ${CODECHECKER_PARSE_OPTS} || ${CMAKE_COMMAND} -E true)
-endif()
-
 if(DEFINED CODECHECKER_EXPORT)
   string(REPLACE "," ";" export_list ${CODECHECKER_EXPORT})
 
@@ -126,7 +119,7 @@ if(DEFINED CODECHECKER_EXPORT)
         --output ${output_dir}/codechecker.${export_item}
         ${CODECHECKER_CONFIG_FILE}
         ${CODECHECKER_TRIM_PATH_PREFIX}
-        ${CODECHECKER_PARSE_OPTS}
+        ${CODECHECKER_PARSE_OPTS} || ${CMAKE_COMMAND} -E true
       BYPRODUCTS ${output_dir}/codechecker.${export_item}
       VERBATIM
       USES_TERMINAL
@@ -135,7 +128,16 @@ if(DEFINED CODECHECKER_EXPORT)
     add_dependencies(codechecker-report-${export_item} codechecker)
     add_dependencies(codechecker-cleanup codechecker-report-${export_item})
   endforeach()
-elseif(NOT CODECHECKER_PARSE_SKIP)
+endif()
+
+# If 'codechecker parse' returns an exit status of '2', it means more than 0
+# issues were detected. Suppress the exit status by default, but permit opting
+# in to the failure.
+if(NOT CODECHECKER_PARSE_EXIT_STATUS)
+  set(CODECHECKER_PARSE_OPTS ${CODECHECKER_PARSE_OPTS} || ${CMAKE_COMMAND} -E true)
+endif()
+
+if(NOT CODECHECKER_PARSE_SKIP)
   # Output parse results
     add_custom_target(codechecker-parse ALL
     COMMAND ${CODECHECKER_EXE} parse
